{"version":3,"sources":["Components/Header/Header.jsx","Components/Footer/Footer.jsx","Components/AddSquareForm/AddSquareForm.jsx","libs/SquareThemes.js","libs/Synth.js","Components/Square/Square.jsx","Components/SquareList/SquareList.jsx","Components/Settings/Settings.jsx","libs/Store.js","App.jsx","serviceWorker.js","index.js"],"names":["Header","props","className","Footer","AddSquareForm","updateState","e","setState","text","target","value","onAdd","state","onAddSquare","placeholder","type","onChange","this","onClick","React","Component","squareThemes","red","blue","green","yellow","pink","orange","purple","pickRandomTheme","obj","keys","Object","length","Math","random","randomProperty","synth","rate","voiceUri","window","speechSynthesis","onvoiceschanged","voices","getVoices","setVoice","onVoicesChanged","bind","voice","filter","v","i","a","voiceURI","utterThis","SpeechSynthesisUtterance","speak","Square","square","showDeleteButton","isDeleteButtonHidden","toggleDeleteButtonVisibility","hideDeleteButton","theme","isTextTrimmed","substring","concat","Zoom","in","timeout","onMouseLeave","onMouseOver","deleteSquare","id","class","SquareList","squares","map","s","key","Settings","htmlFor","selectedVoice","onSelectedVoiceChanged","name","onRateChanged","min","max","StoreKeys","store","get","save","settings","undefined","data","json","JSON","stringify","localStorage","setItem","getItem","parse","App","saveData","saveSquares","saveSettings","randomTheme","newSquare","uuid","v4","stopPropagation","changeSelectedVoice","setVoiceUri","changeRate","setRate","getSquares","getSettings","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d070a47b.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\n\r\nconst Header = (props) => {\r\n  return (\r\n  <header className=\"bg-navy tc ph4 pv3\">\r\n    <h1 className=\"title gold f3 f2-m f1-l mv3\">\r\n      Speech Squares\r\n    </h1>\r\n  </header>);\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer className=\"bg-navy bottom-0 w-100 pv4 ph3 ph5-m ph6-l mid-gray\">\r\n            <small className=\"f6 db near-white fl\">Made by Mar ♡</small>\r\n            <small className=\"f6 db near-white fr\">v0.0.1</small>\r\n        </footer>);\r\n};\r\n\r\nexport default Footer;\r\n\r\n","import React from 'react';\r\n\r\nclass AddSquareForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"bg-blue2 mw8 center pa4 cf h-100\">\r\n                <input className=\"f6 f5-l input-reset bn fl black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns br--left-ns\"\r\n                    placeholder=\"type a 'sound' and add it to the board\"\r\n                    type=\"text\"\r\n                    onChange={this.updateState} />\r\n                <input className=\"f6 f5-l button-reset fl pv3 tc bn bg-animate bg-black-70 hover-bg-black white pointer w-100 w-25-m w-20-l br2-ns br--right-ns\"\r\n                    type=\"submit\"\r\n                    value=\"Add\"\r\n                    onClick={this.onAdd} />\r\n            </div>);\r\n    }\r\n\r\n    updateState = (e) => {\r\n        this.setState({ text: e.target.value })\r\n    }\r\n\r\n    onAdd = () => {\r\n        if(this.state.text){\r\n        if (this.props.onAddSquare)\r\n            this.props.onAddSquare(this.state.text);\r\n        }\r\n    }\r\n};\r\n\r\nexport default AddSquareForm;\r\n","const squareThemes = {\r\n    red: 'red',\r\n    blue: 'blue',\r\n    green: 'green',\r\n    yellow: 'yellow',\r\n    pink: 'pink',\r\n    orange: 'orange',\r\n    purple: 'purple'\r\n}\r\n\r\nconst randomProperty = function (obj) {\r\n    var keys = Object.keys(obj)\r\n    return obj[keys[ keys.length * Math.random() << 0]];\r\n};\r\n\r\nconst pickRandomTheme = function() {\r\n    return randomProperty(squareThemes);\r\n}\r\n\r\nexport default pickRandomTheme;\r\n","class Synth {\r\n    constructor() {\r\n        this.rate = 0;\r\n        this.voiceUri = \"Google português do Brasil\";\r\n        this.synth = window.speechSynthesis;\r\n        this.synth.onvoiceschanged = function () {\r\n            this.voices = this.synth.getVoices();\r\n            this.setVoice(this.voiceUri);\r\n            if (this.onVoicesChanged)\r\n                this.onVoicesChanged();\r\n        }.bind(this);\r\n    }\r\n\r\n    setVoiceUri(voiceUri) {\r\n        this.voiceUri = voiceUri;\r\n    }\r\n\r\n    setVoice(voiceUri){\r\n        this.voice = this.voices.filter((v, i, a) => v.voiceURI === voiceUri)[0];\r\n    }\r\n\r\n    setRate(rate) {\r\n        if (rate)\r\n            this.rate = rate;\r\n    }\r\n\r\n    getVoices() {\r\n        return this.voices;\r\n    }\r\n\r\n    speak(text) {\r\n        this.setVoice(this.voiceUri);\r\n        const utterThis = new SpeechSynthesisUtterance(text);\r\n        utterThis.voice = this.voice;\r\n        this.synth.speak(utterThis);\r\n    }\r\n\r\n    getSelectedVoice() {\r\n        return this.voice;\r\n    }\r\n}\r\n\r\nconst synth = new Synth();\r\nexport default synth;","import React from 'react';\r\nimport './Square.css'\r\nimport './SquareThemes.css'\r\nimport '@fortawesome/fontawesome-free/css/all.min.css'\r\nimport pickRandomTheme from '../../libs/SquareThemes'\r\nimport synth from '../../libs/Synth'\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isDeleteButtonHidden: true\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { square } = this.props;\r\n        let theme = square.theme || pickRandomTheme();\r\n        let text = square.text;\r\n        let isTextTrimmed = false;\r\n        if(square.text.length > 4)\r\n        {\r\n            text = square.text.substring(0, 4).concat('...');\r\n            isTextTrimmed = true;\r\n        }\r\n        return (\r\n            <Zoom in={true} timeout={200}>\r\n                <div className=\"pa2\"\r\n                    onClick={this.speak}>\r\n                    <div className={`sb shadow-1 w4 h4 grow pointer bg-${theme} b-${theme}`}\r\n                        onMouseLeave={this.hideDeleteButton}\r\n                        onMouseOver={this.showDeleteButton}>\r\n                        {!this.state.isDeleteButtonHidden &&\r\n                            <div onClick={this.props.deleteSquare.bind(null, square.id)}>\r\n                                <i className=\"delete fa fa-trash-alt\" />\r\n                            </div>}\r\n                        <p className=\"db link tc pa2 square-text tooltip\">{text} \r\n                            {isTextTrimmed && <span class=\"tooltiptext\">{square.text}</span>}</p>\r\n                    </div>\r\n                </div>\r\n            </Zoom>);\r\n    }\r\n\r\n    speak = () => {\r\n        const { square } = this.props;\r\n        synth.speak(square.text);\r\n    }\r\n\r\n    showDeleteButton = () => {\r\n        if (this.state.isDeleteButtonHidden)\r\n            this.toggleDeleteButtonVisibility();\r\n    }\r\n\r\n    hideDeleteButton = () => {\r\n        if (!this.state.isDeleteButtonHidden)\r\n            this.toggleDeleteButtonVisibility();\r\n    }\r\n\r\n    toggleDeleteButtonVisibility = () => {\r\n        this.setState({ isDeleteButtonHidden: !this.state.isDeleteButtonHidden });\r\n    }\r\n};\r\n\r\nexport default Square;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Square from '../Square/Square'\r\nimport './SquareList.css'\r\n\r\nclass SquareList extends React.Component {\r\n    render() {\r\n        const { squares } = this.props;\r\n        return (\r\n            <div className=\"center mw8 list flex flex-wrap bg-near-white\">\r\n                {squares.map(s => {\r\n                    return <Square key={s.id} square={s} deleteSquare={this.props.deleteSquare} />\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default SquareList;\r\n\r\n","import React from 'react';\r\nimport './Settings.css'\r\nimport synth from '../../libs/Synth'\r\n\r\nclass Settings extends React.Component {\r\n    constructor(){\r\n        super();\r\n        synth.onVoicesChanged = this.onVoicesChanged;\r\n        this.state = {\r\n            voices: synth.getVoices()\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"center mw8 cf bg-gold pa4\">\r\n                <div className=\"fl w-70\">\r\n                    <label htmlFor=\"voicesSelect\">Voice</label><br />\r\n                    <select id=\"voicesSelect\"\r\n                        className=\"f6 f5-l bn black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns\"\r\n                        value={this.props.selectedVoice}\r\n                        onChange={this.props.onSelectedVoiceChanged}>\r\n                        {this.state.voices && this.state.voices.map(v => (\r\n                            <option key={v.voiceUri} value={v.voiceUri}>{v.name}</option>\r\n                        ))}\r\n                    </select>\r\n                </div>\r\n                <div className=\"fl w-30\">\r\n                    <label htmlFor=\"rate\">Rate</label><br />\r\n                    <input id=\"rate\"\r\n                        className=\"f6 f5-l bn black-80 bg-white pa3 lh-solid w-100 w-75-m w-80-l br2-ns\"\r\n                        type=\"number\"\r\n                        value={this.props.rate}\r\n                        onChange={this.props.onRateChanged}\r\n                        min=\"-10\"\r\n                        max=\"10\"/>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onVoicesChanged = () =>{\r\n        this.setState({voices: synth.getVoices()});\r\n    }\r\n};\r\n\r\nexport default Settings;","const StoreKeys = {\r\n  SQUARES: \"SQUARES\",\r\n  SETTINGS: \"SETTINGS\"\r\n}\r\n\r\nclass Store {\r\n  getSquares() {\r\n    const squares = this.get(StoreKeys.SQUARES);\r\n    return squares || [];\r\n  }\r\n\r\n  saveSquares(squares) {\r\n    this.save(StoreKeys.SQUARES, squares);\r\n  }\r\n\r\n  getSettings() {\r\n    const settings = this.get(StoreKeys.SETTINGS);\r\n    if (settings && settings.rate)\r\n      return settings;\r\n    return { rate: 0, selectedVoice: undefined };\r\n  }\r\n\r\n  saveSettings(rate, voiceUri) {\r\n    const settings = {\r\n      rate,\r\n      selectedVoice: voiceUri\r\n    }\r\n    this.save(StoreKeys.SETTINGS, settings);\r\n  }\r\n\r\n  save(key, data) {\r\n    const json = JSON.stringify(data);\r\n    window.localStorage.setItem(key, json);\r\n  }\r\n\r\n  get(key) {\r\n    const json = window.localStorage.getItem(key);\r\n    return JSON.parse(json);\r\n  }\r\n}\r\n\r\nconst store = new Store();\r\nexport default store;","import React from 'react';\r\nimport uuid from 'uuid'\r\n\r\nimport Header from './Components/Header/Header'\r\nimport Footer from './Components/Footer/Footer'\r\nimport AddSquareForm from './Components/AddSquareForm/AddSquareForm'\r\nimport SquareList from './Components/SquareList/SquareList'\r\nimport Settings from './Components/Settings/Settings'\r\n\r\nimport pickRandomTheme from './libs/SquareThemes'\r\nimport store from './libs/Store'\r\nimport synth from './libs/Synth'\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super()\r\n    const squares = store.getSquares();\r\n    const settings = store.getSettings();\r\n    this.state = {\r\n      squares: squares,\r\n      selectedVoice: settings.selectedVoice,\r\n      rate: settings.rate\r\n    }\r\n    synth.setVoiceUri(settings.voiceUri);\r\n    synth.setRate(settings.rate);\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('beforeunload', this.saveData);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.saveData();\r\n    window.removeEventListener('beforeunload', this.saveData); // remove the event handler for normal unmounting\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <main>\r\n        <Header />\r\n        <AddSquareForm onAddSquare={this.onAddSquare} />\r\n        <Settings selectedVoice={this.state.selectedVoice} \r\n          rate={this.state.rate} \r\n          onSelectedVoiceChanged={this.changeSelectedVoice} \r\n          onRateChanged={this.changeRate}\r\n        />\r\n        <SquareList squares={this.state.squares} deleteSquare={this.deleteSquare} />\r\n        <Footer />\r\n      </main>\r\n    );\r\n  }\r\n\r\n  saveData = () => {\r\n    store.saveSquares(this.state.squares);\r\n    store.saveSettings(this.state.rate, this.state.selectedVoice);\r\n  }\r\n\r\n  onAddSquare = (text) => {\r\n    const randomTheme = pickRandomTheme();\r\n    const newSquare = {\r\n      id: uuid.v4(),\r\n      text: text,\r\n      theme: randomTheme\r\n    };\r\n    this.setState({ squares: this.state.squares.concat(newSquare) });\r\n  }\r\n\r\n  deleteSquare = (id, e) => {\r\n    e.stopPropagation();\r\n    this.setState({\r\n      squares: this.state.squares.filter(s => s.id !== id)\r\n    });\r\n  }\r\n\r\n  changeSelectedVoice = (e) => {\r\n    const voiceUri = e.target.value;\r\n    this.setState({ selectedVoice: voiceUri });\r\n    synth.setVoiceUri(voiceUri);\r\n  }\r\n\r\n  changeRate = (e) => {\r\n    const rate = e.target.value;\r\n    this.setState({ rate: rate });\r\n    synth.setRate(rate);\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}